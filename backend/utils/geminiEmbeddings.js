const { GoogleGenerativeAI } = require("@google/generative-ai");
require("dotenv").config();
const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
const model = genAI.getGenerativeModel({ model: process.env.GEMINI_MODEL });
const embeddingModel = genAI.getGenerativeModel({
  model: process.env.GEMINI_EMBEDDING_MODEL,
});
async function embedText(text) {
  try {
    const result = await embeddingModel.embedContent({
      content: {
        parts: [{ text }],
      },
      taskType: "RETRIEVAL_QUERY",
    });
    console.log("result----------embedText");
    const embedding = result.embedding.values;
    return embedding;
  } catch (error) {
    console.error("Error embedding text with Gemini:", error);
    throw error;
  }
}

async function generateText(prompt) {
  console.log("Generating text with Gemini...-------");
  try {
    const result = await model.generateContent({
      contents: [
        {
          parts: [{ text: prompt }],
        },
      ],
    });
    const response = result.response;
    if (
      !response.candidates ||
      !response.candidates[0] ||
      !response.candidates[0].content ||
      !response.candidates[0].content.parts
    ) {
      console.error("No text generated by Gemini");
      return "Error generating summary.";
    }
    const text = response.candidates[0].content.parts[0].text;
    return text;
  } catch (error) {
    console.error("Error generating text with Gemini:", error);
    throw error;
  }
}

module.exports = { embedText, generateText };
